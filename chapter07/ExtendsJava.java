package chapter07;

public class ExtendsJava {
	// 상속
	//  - 부모가 자식에게 물려주는 행위(현실)
	//  - 자식은 상속을 통해서 부모가 물려준것을 자연스럽게 이용 가능
	//  - 객체지향: 부모 클래스 - (상속) - 자식 클래스
	//  - 부모클래스에 정의된 필드와 함수 들을 자식 클래스에서
	//    * 선언없이 사용 가능 *
	//  -> 코드의 중복을 줄여줌
	//  -> 코드의 재사용성을 높여줌
	//  -> 효율성 향상
	
	//  - 자식 클래스라고 부모 클래스의 모든 것을 가져다 쓸수 없음
	//  -> 부모클래스에 private 으로 선언된 것은 사용하지 못함.
	//  -> 부모클래스에 Default 로 선언된 필드나 함수는 
	//     자식클래스가 다른 패키지에 존재한다면 못 사용
	//     (public or protected 를 사용)
	
	//  - 클래스의 수정을 최소화
	//  -> 부모 - 자식1, 자식2, 자식3 : 부모 클래스 1회 수정
	//  -> 독립적으로 클래스1, 클래스2, 클래스3 : 클래스별로 총 3회 수정
	
	//  - Class 설계도 : 자식클래스 extends 부모클래스
	//    자식클래스 객체생성해서 사용!
	//  -> 자식클래스를 객체생성 할 때 자식 클래스의 생성자를 호출 
	//     super() 통해서 부모클래스 생성자()가 먼저 호출 되고
	//     후에 자식 클래스 생성자()가 실행
	//  -> 부모클래스 객체 생성 후 자식클래스 객체가 생성 됨
	
	//  - 다형성
	//  - 클래스명 변수명 = new 클래스();
	//  -> 상속 받은 경우
	//     부모클래스명 변수명 = new 자식클래스명();  (가능)
	//  -> 부모 클래스 type 으로 자식 클래스를 정의!
	//  다형성 예)
	//  다형성 예 
	//   - 자동차 공장 -> 타이어 조립
	//  
	//
	//   부모클래스: Tire tire;
	//   자식클래스: 금호, 한국, 넥센
	//   makeCar(넥센Type tire) {
	//      tire 를 사용해서 자동차 생성!
	//   }
	
	//  A -> B -> C -> D
	//       B -> E
	//  * 부모 여러명 불가! (다중상속 불가 -> 다중구현체 가능)
	//  * 자식 여러명 가능! 
	
}
